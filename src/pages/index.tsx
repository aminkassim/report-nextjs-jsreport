import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useCallback, useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [reportState, setReportState] = useState({ loading: false, error: null })

  const handleBtnGenerate = useCallback(
    async function btnGenerate () {
      // Dynamically load jsreport browser sdk because it only works on client side
      const jsreport = (await import('@jsreport/browser-client')).default

      // uncomment this code
      jsreport.serverUrl = "http://localhost:5488"
      jsreport.headers['Authorization'] = "Basic " + btoa("admin:12345")

      try {
        setReportState((prev) => ({ ...prev, loading: true, error: null }))

        const report = await jsreport.render({
          template: {
            content: 'Hello from {{message}}',
            engine: 'handlebars',
            recipe: 'chrome-pdf'
          },
        });

        report.openInWindow({ title: "My Quotation" })
      } catch (error) {
        setReportState((prev) => ({ ...prev, error }))
      } finally {
        setReportState((prev) => ({ ...prev, loading: false }))
      }
    },
    []
  )

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <button
          disabled={reportState.loading}
          onClick={handleBtnGenerate}
        >
          {reportState.loading ? 'Loading...' : 'Generate Report'}
        </button>
        {reportState.error && (
          <div style={{ color: 'red' }}>{reportState.error.message}</div>
        )}
      </main>
    </>
  )
}
